---
# tasks file for docker.vpn_l2tp-ikev2
- name: Ping test
  ping:

- name: Start Docker service
  service:
    name: docker
    state: started

- name: Check Vpn-strongswan
  shell: docker ps -a | grep -q "vpn-strongswan"
  register: check_result
  ignore_errors: true

- block:
    - name: Stop container
      ansible.builtin.docker_container:
        name: vpn-strongswan
        state: stopped

    - name: Delete container
      ansible.builtin.docker_container:
        name: vpn-strongswan
        state: absent

    - name: Clear all unused Docker volumes
      ansible.builtin.docker_volume:
        prune: true

    - name: Delete image
      ansible.builtin.docker_image:
        name: fisher/vpn-strongswan
        state: absent
  when: check_result == 0

- name: Create necessary volume ipsec.d for Vpn-strongswan
  ansible.builtin.docker_volume:
    name: vpn_ipsec.d
    state: present
  register: vpn_ipsec.d

- name: Create necessary volume strongswand.d for Vpn-strongswan
  ansible.builtin.docker_volume:
    name: vpn_strongswan.d
    state: present
  register: vpn_strongswan.d

- name: Create necessary volume xl2tpd for Vpn-strongswan
  ansible.builtin.docker_volume:
    name: vpn_xl2tpd
    state: present
  register: vpn_xl2tpd

- name: Create necessary volume ppp for Vpn-strongswan
  ansible.builtin.docker_volume:
    name: vpn_ppp
    state: present
  register: vpn_ppp

- name: Create necessary volume logs for Vpn-strongswan
  ansible.builtin.docker_volume:
    name: vpn_logs
    state: present
  register: vpn_logs

- name: Run Vpn-strongswan container
  ansible.builtin.docker_container:
    name: vpn-strongswan
    image: fisher772/vpn-strongswan
    state: started
    privileged: true
    network_mode: host
    restart_policy: always
    hostname: vpn-strongswan
    volumes:
      - vpn_ipsec.d:/etc/ipsec.d
      - vpn_strongswan.d:/etc/strongswan.d
      - vpn_xl2tpd:/etc/xl2tpd
      - vpn_ppp_volume.path:/etc/ppp
      - vpn_logs:/var/log/vpn
    env:
      TZ: "{{ EKB }}"
      LE_CERT_STATUS: "{{ CERT_STATUS }}"
      IPTABLES: "{{ STATUS }}"
      IPTABLES_INTERFACE: "{{ NET }}"
      IPTABLES_ENDPOINTS: "{{ IPTAB_ROUTE_RANGE }}"

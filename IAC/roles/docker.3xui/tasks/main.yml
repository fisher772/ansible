---
# tasks file for docker.3xui
- name: Ping test
  ping:

- name: Start Docker service
  service:
    name: docker
    state: started

- name: Check 3xui
  shell: docker ps -a | grep -q "3xui"
  register: check_result
  ignore_errors: true

- block:
    - name: Stop container
      ansible.builtin.docker_container:
        name: 3xui
        state: stopped

    - name: Delete container
      ansible.builtin.docker_container:
        name: 3xui
        state: absent

    - name: Clear all unused Docker volumes
      ansible.builtin.docker_volume:
        prune: true

    - name: Delete image
      ansible.builtin.docker_image:
        name: fisher772/3xui
        state: absent
  when: check_result == 0

- name: Create necessary volume 3xui_db for 3xui
  ansible.builtin.docker_volume:
    name: 3xui_db
    state: present
  register: three_xui_db

- name: Create/map necessary volume nginx_ssl for 3xui
  ansible.builtin.docker_volume:
    name: nginx_ssl
    state: present
  register: nginx_ssl

- name: Create/map necessary volume nginx_conf for 3xui
  ansible.builtin.docker_volume:
    name: nginx_conf
    state: present
  register: nginx_conf

- name: Create/map necessary volume nginx_stream for 3xui
  ansible.builtin.docker_volume:
    name: nginx_stream
    state: present
  register: nginx_stream

- name: Ensure network exists
  ansible.builtin.docker_network:
    name: 3xui
    state: present

- name: Run 3xui container
  ansible.builtin.docker_container:
    name: 3xui
    image: fisher772/3xui
    restart_policy: unless-stopped
    hostname: 3xui
    published_ports:
      - 62222:62222
      - 63333:63333
    volumes:
      - 3xui_db:/etc/x-ui
      - nginx_ssl:/root/cert
      - nginx_conf:/data/nginx/conf
      - nginx_stream:/data/nginx/stream
    env:
      XRAY_VMESS_AEAD_FORCED: "false"
      LE_FQDN: "{{ FQDN }}"
      CONTAINER_ALIAS: "{{ C_ALIAS }}"
      SERVER_ALIAS: "{{ S_ALIAS }}"
    networks:
      - name: nginx
      - name: 3xui

---
# tasks file for vpn_l2tp
- name: Test ping
  ping:

##### Block for Create Users/Groups and Add grants #####
- block:
    - name: Combine groups
      set_fact:
        combined_groups: "{{ combined_groups | default([]) + (iac_group.split() if iac_group!= '' else []) + (vpn_group.split() if vpn_group!= '' else []) }}"

    - name: Create Users Groups
      group:
        name: "{{ item }}"
        state: present
      loop: "{{ combined_groups }}"

    - name: Create User and SSH key for Ansible
      user:
        name: "{{ iac_user }}"
        password: "{{ iac_pw }}"
        groups: "{{ iac_group }}"
        append: true
        state: present
        createhome: true
        generate_ssh_key: true
        ssh_key_type: "ed25519"
        ssh_key_file: ".ssh/id_ed25519"

    - name: Allow the Ansible user to run any commands as grant_secret user
      community.general.sudoers:
        name: "{{ iac_user }}"
        state: present
        user: "{{ iac_user }}"
        runas: "{{ grant_secret }}"
        commands: ALL

    - name: Create User and SSH key for VPN
      user:
        name: "{{ vpn_user }}"
        password: "{{ vpn_pw }}"
        groups: "{{ vpn_group }}"
        createhome: true
        generate_ssh_key: true
        ssh_key_type: "ed25519"
        ssh_key_file: ".ssh/id_ed25519"

    - name: Allow the VPN user to run any commands as grant_secret user
      community.general.sudoers:
        name: "{{ vpn_user }}"
        state: present
        user: "{{ vpn_user }}"
        runas: "{{ grant_secret }}"
        commands:
          - /bin/systemctl start *
          - /bin/systemctl stop *
          - /bin/systemctl restart *
          - /bin/systemctl reload *
          - /bin/systemctl status *
          - /bin/systemctl daemon-reload
  when: users_status is true
  no_log: true

#####Block for Debian/Ubuntu#####
- block:
    - name: Execute Upgrade unix Packages 'Debian/Ubuntu'
      apt:
        upgrade: true
        update_cache: true
        state: latest

    - name: Install utils/unix-packages for 'Debian/Ubuntu'
      apt:
        name: "{{ packages }}"
        state: latest
      notify:
        - Install packages for Speedtest

    - name: Install VPN services for 'Debian/Ubuntu'
      apt:
        name: "{{ services }}"
        state: latest
      register: services_results
      notify:
        - Started Services if installed for 'Debian/Ubuntu'
        - Restarted Services if updated for 'Debian/Ubuntu'
  when: vm_os_fam == "Debian"
     or vm_os_fam == "Ubuntu"

#####Block for RedHat#####
- block:
    - name: Execute Update unix Packages 'RedHat'
      yum:
        name: '*'
        state: latest

    - name: Install utils/unix-packages for 'RedHat'
      yum:
        name: "{{ packages + ['yum-utils'] + ['epel-release'] }}"
        state: latest
      notify:
        - Install packages for Speedtest

    - name: Install VPN services for 'RedHat'
      yum:
        name: "{{ services }}"
        state: latest
      register: services_results
      notify:
        - Started Services if installed for 'RedHat'
        - Restarted Services if updated for 'RedHat'
  when: vm_os_fam == "RedHat"

- name: Execute cmd updatedb
  shell: updatedb

#####Block for CP config settings and Start/Enable/Reboot services#####
- block:
    - name: CP ipsec.config for 'Debian/Ubuntu'
      copy:
        src: ipsec.conf
        dest: /etc
        mode: "0644"
      when: vm_os_fam == "Debian"
         or vm_os_fam == "Ubuntu"

    - name: CP ipsec.config for 'RedHat'
      copy:
        src: ipsec.conf
        dest: /etc/strongswan
        mode: "0644"
      when: vm_os_fam == "RedHat"

    - name: CP ikev2.conf template for 'Debian/Ubuntu'
      template:
        src: ikev2.conf.j2
        dest: /etc/ikev2.conf
        mode: "0644"
      when: vm_os_fam == "Debian"
         or vm_os_fam == "Ubuntu"

    - name: CP ikev2.conf template for 'RedHat'
      template:
        src: ikev2.conf.j2
        dest: /etc/strongswan/ikev2.conf
        mode: "0644"
      when: vm_os_fam == "RedHat"    

    - name: CP ipsec.secret template for 'Debian/Ubuntu'
      template:
        src: ipsec.secrets.j2
        dest: /etc/ipsec.secrets
        mode: "0600"
      when: vm_os_fam == "Debian"
         or vm_os_fam == "Ubuntu"

    - name: CP ipsec.secret template for 'RedHat'
      template:
        src: ipsec.secrets.j2
        dest: /etc/strongswan/ipsec.secrets
        mode: "0600"
      when: vm_os_fam == "RedHat"

    - name: CP xl2tpd.conf template
      template:
        src: xl2tpd.conf.j2
        dest: /etc/xl2tpd/xl2tpd.conf
        mode: "0644"

    - name: CP options.xl2tpd template
      template:
        src: options.xl2tpd.j2
        dest: /etc/ppp/options.xl2tpd
        mode: "0644"

    - name: CP chap-secrets template
      template:
        src: chap-secrets.j2
        dest: /etc/ppp/chap-secrets
        mode: "0600"
      when: users_status is true

    - name: CP .sh Scripts for Generate Keys/Rules/Forwarding
      copy:
        src: "*.sh"
        dest: /tmp/vpn_sh
        mode: "+x"

    - name: CP.env file for .sh
      copy:
        src: ".env"
        dest: /tmp/vpn_sh
        mode: "0644"

    - name: Running a Handler
      script: /tmp/vpn_sh/handler.sh
      when: sh_status is true
  notify:
    - Apply changes and reload for sysctl
    - Restarted Services for 'Debian/Ubuntu'
    - Restarted Services for 'RedHat'

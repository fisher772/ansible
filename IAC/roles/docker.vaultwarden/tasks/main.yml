---
# tasks file for docker.vaultwarden
- name: Ping test
  ping:

- name: Start Docker service
  service:
    name: docker
    state: started

- name: Check Vaultwarden
  shell: docker ps -a | grep -q "vaultwarden"
  register: check_result
  ignore_errors: true

- block:
    - name: Stop container
      ansible.builtin.docker_container:
        name: vaultwarden
        state: stopped

    - name: Delete container
      ansible.builtin.docker_container:
        name: vaultwarden
        state: absent

    - name: Clear all unused Docker volumes
      ansible.builtin.docker_volume:
        prune: true

    - name: Delete basic image 
      ansible.builtin.docker_image:
        name: vaultwarden/server
        state: absent

    - name: Delete image
      ansible.builtin.docker_image:
        name: fisher772/vaultwarden
        state: absent
  when: check_result == 0

- import_tasks: "{{ import_file }}"
  when: import_status is true

- block:
    - name: Clone Git Repo
      git:
        repo: git@github.com:fisher772/docker_images.git
        dest: /tmp/git_remote_repo
        force: true

    - name: MV Conf files for Vaultwarden
      shell: mv "{{ src_folder }}/"*.conf "{{ conf_dest_folder }}"

    - name: MV Conf-stream files for Vaultwarden
      shell: mv "{{ src_folder }}/stream/"*.conf "{{ stream_dest_folder }}"

    - name: Create necessary volume vaultwarden_data for Vaultwarden
      ansible.builtin.docker_volume:
        name: vaultwarden_data
        state: present
      register: vaultwarden_data

    - name: Create necessary volume vaultwarden_logs for Vaultwarden
      ansible.builtin.docker_volume:
        name: vaultwarden_logs
        state: present
      register: vaultwarden_logs

    - name: Create/map necessary volume nginx_ssl for Vaultwarden
      ansible.builtin.docker_volume:
        name: nginx_ssl
        state: present
      register: nginx_ssl

    - name: Create/map necessary volume nginx_conf for Vaultwarden
      ansible.builtin.docker_volume:
        name: nginx_conf
        state: present
      register: nginx_conf

    - name: Create/map necessary volume nginx_stream for Vaultwarden
      ansible.builtin.docker_volume:
        name: nginx_stream
        state: present
      register: nginx_stream

    - name: Ensure network exists
      ansible.builtin.docker_network:
        name: vaultwarden
        state: present

    - name: Run Vaultwarden container
      ansible.builtin.docker_container:
        name: vaultwarden
        image: vaultwarden/server
        state: started
        restart_policy: unless-stopped
        hostname: vaultwarden
        volumes:
          - vaultwarden_data:/data/
          - vaultwarden_logs:/var/log/vaultwarden
          - nginx_ssl:/data/nginx
          - nginx_conf:/data/nginx/conf
          - nginx_stream:/data/nginx/stream
        env:
          TZ: "{{ EKB }}"
          LOG_FILE: "{{ LOGS }}"
          LE_FQDN: "{{ FQDN }}"
          CONTAINER_ALIAS: "{{ C_ALIAS }}"
          SERVER_ALIAS: "{{ S_ALIAS }}"
        networks:
          - name: nginx
          - name: vaultwarden

    - name: RM Git Repo
      file:
        name: /tmp/git_remote_repo
        state: absent
  when: import_status is not true
